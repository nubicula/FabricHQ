// Generated by CoffeeScript 1.10.0
(function() {
  var Base, Discount,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Discount = (function(superClass) {
    extend(Discount, superClass);

    Discount.prototype.slug = 'discount';

    Discount.prototype.prefix = '/discounts';

    function Discount(site) {
      Discount.__super__.constructor.call(this, site);
    }

    Discount.prototype._isIdValid = function(id) {
      var ref;
      if (((ref = typeof id) !== 'string' && ref !== 'number') || id !== 0 && !id) {
        return false;
      }
      return true;
    };

    Discount.prototype.disable = function(id, callback) {
      var url;
      if (!this._isIdValid(id)) {
        return callback(new Error('invalid or missing id'));
      }
      url = this.resource.queryString(this.prefix + "/" + id + "/disable");
      return this.resource.post(url, this.slug, callback);
    };

    Discount.prototype.enable = function(id, callback) {
      var url;
      if (!this._isIdValid(id)) {
        return callback(new Error('invalid or missing id'));
      }
      url = this.resource.queryString(this.prefix + "/" + id + "/enable");
      return this.resource.post(url, this.slug, callback);
    };

    return Discount;

  })(Base);

  module.exports = Discount;

}).call(this);
